[
    {
        "id": "7d26dacc.6bfb94",
        "type": "subflow",
        "name": "Clean ToDo",
        "info": "Cleans a todo item from the database ready to return in the API.\n\nThis involves:\n\n - removing the `_id` and `_rev` properties\n - adding the `url` property\n\n### Inputs\n\nExpects `msg.payload` to be a todo item from the database.\n\n### Outputs\n\n`msg.payload` contains the clean todo item.",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "55ee4eca.425db"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 320,
                "y": 80,
                "wires": [
                    {
                        "id": "55ee4eca.425db",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99",
        "icon": "font-awesome/fa-check-square-o"
    },
    {
        "id": "55ee4eca.425db",
        "type": "function",
        "z": "7d26dacc.6bfb94",
        "name": "",
        "func": "msg.payload.url = msg.req.protocol + '://' + msg.req.get('host') + '/todos/' + msg.payload._id\ndelete msg.payload._rev;\ndelete msg.payload._id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 190,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "19d38fbf.a18f6",
        "type": "subflow",
        "name": "Get ToDo",
        "info": "Gets an individual todo item from the database.\n\n### Inputs\n\nExpects `msg.payload` to be the `_id` of the todo item.\n\n### Outputs\n\n`msg.payload` contains the todo item with the additional fields set.",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 60,
                "wires": [
                    {
                        "id": "f801b73e.2fa6e8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 520,
                "y": 60,
                "wires": [
                    {
                        "id": "5c3552e3.1c524c",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99",
        "icon": "font-awesome/fa-check-square-o"
    },
    {
        "id": "f801b73e.2fa6e8",
        "type": "cloudantplus in",
        "z": "19d38fbf.a18f6",
        "name": "",
        "cloudant": "3e527677.c86c1a",
        "database": "todos",
        "service": "_ext_",
        "search": "_id_",
        "design": "",
        "index": "",
        "x": 190,
        "y": 60,
        "wires": [
            [
                "5c3552e3.1c524c"
            ]
        ]
    },
    {
        "id": "5c3552e3.1c524c",
        "type": "subflow:7d26dacc.6bfb94",
        "z": "19d38fbf.a18f6",
        "name": "",
        "env": [],
        "x": 370,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "81389382.5c507",
        "type": "tab",
        "label": "Todo APIs",
        "disabled": false,
        "info": ""
    },
    {
        "id": "9e747482.d4c2a8",
        "type": "http in",
        "z": "81389382.5c507",
        "name": "",
        "url": "/todos",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 100,
        "wires": [
            [
                "a07a53ce.62217"
            ]
        ]
    },
    {
        "id": "dcf53a36.75f188",
        "type": "http response",
        "z": "81389382.5c507",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1050,
        "y": 100,
        "wires": []
    },
    {
        "id": "bfdb44a1.1824d8",
        "type": "comment",
        "z": "81389382.5c507",
        "name": "Get all todos",
        "info": "Get all todo items from the database.\n\nThe Cloudant node offers a 'Get All' option, but it does not expose the option to include the documents in the result. So this flow has to do some extra work to get the full result.\n\nThe 'Check empty?' Switch node checks to see if any results have been returned. If not (2nd output) it passes straight to the HTTP Response node with an empty array.\n\nOtherwise it passes the results to a Split node that generates one message per result. Each of those messages contains the `_id` of a todo item. This is passed to the `Get ToDo` Subflow which retrieves the individual item.\n\nThese are then passed to the Join node which recombines the stream of messages generated by the Split node back into a single message. This can finally be passed to the HTTP Response node.",
        "x": 110,
        "y": 60,
        "wires": []
    },
    {
        "id": "e183cfc6.1f008",
        "type": "http in",
        "z": "81389382.5c507",
        "name": "",
        "url": "/todos",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 200,
        "wires": [
            [
                "e360bc45.81bfe"
            ]
        ]
    },
    {
        "id": "3612f215.13809e",
        "type": "comment",
        "z": "81389382.5c507",
        "name": "Add a new todo",
        "info": "Adds a new todo item to the database.\n\nThis flow starts by setting some default values on the todo item if they have not been provided.\n\nIt then stores it in the database.\n\nThe 'Success?' Switch node checks the response from the database and if it was successful it passes the id of the newly added todo item back to the HTTP Response node.\n\nThe second output of the Switch node will be triggered if there is an error storing the item. It is not currently connected to anything so the error is ignored.\n\n",
        "x": 120,
        "y": 160,
        "wires": []
    },
    {
        "id": "41c6c422.032d2c",
        "type": "http in",
        "z": "81389382.5c507",
        "name": "",
        "url": "/todos/:todoId",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 460,
        "wires": [
            [
                "cdaeacc.f09e35"
            ]
        ]
    },
    {
        "id": "3f6a1d86.f9b892",
        "type": "http response",
        "z": "81389382.5c507",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 870,
        "y": 460,
        "wires": []
    },
    {
        "id": "f8e522f4.85acd",
        "type": "comment",
        "z": "81389382.5c507",
        "name": "Get a todo item",
        "info": "Gets an individual todo item.\n\nThis uses the `Get ToDo` subflow to get an item from the database and format it properly for returning.\n\nNote the grey Link node - this allows other flows to trigger this flow.",
        "x": 120,
        "y": 420,
        "wires": []
    },
    {
        "id": "3abddbea.a9c8c4",
        "type": "http in",
        "z": "81389382.5c507",
        "name": "",
        "url": "/todos/:todoId",
        "method": "patch",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 620,
        "wires": [
            [
                "788d63c4.d9be3c"
            ]
        ]
    },
    {
        "id": "93ea23e4.066d",
        "type": "comment",
        "z": "81389382.5c507",
        "name": "Update a todo",
        "info": "Updates an existing item.\n\nTo update an item the flow needs to know the items latest `_rev` value. Before it can get that it must first move the incoming update data from `msg.payload` to `msg.patch`. This means the update data is not lost when the item is retrieved from the database.\n\nThe 'Exists?' switch node checks the item is known. If it is (1st output) it applies the update to the document by merging the update data. This uses a JSONata expression. It then writes the document back to the database.\n\nFinally it uses a Link node to pass the message into the 'Get a todo item' flow so the full updated document can be returned.\n\nThe second output of the 'Exists?' switch node causes a 404 response to be returned to the request.",
        "x": 110,
        "y": 560,
        "wires": []
    },
    {
        "id": "6da70566.56d69c",
        "type": "http in",
        "z": "81389382.5c507",
        "name": "",
        "url": "/todos",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 820,
        "wires": [
            [
                "4e1c3359.2d5b2c"
            ]
        ]
    },
    {
        "id": "11249f0d.585451",
        "type": "http response",
        "z": "81389382.5c507",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 970,
        "y": 880,
        "wires": []
    },
    {
        "id": "395159dc.6538f6",
        "type": "comment",
        "z": "81389382.5c507",
        "name": "Delete all todos",
        "info": "Deletes all items in the database.\n\nWhilst CouchDB provides an api for doing this directly, it is not exposed by this Cloudant node.\n\nInstead the flow gets the list of all documents and then iterates over it to delete each in turn. This uses the same Split/Join pattern as the 'Get all todos' flow.",
        "x": 120,
        "y": 780,
        "wires": []
    },
    {
        "id": "4b6dabfd.297b74",
        "type": "http in",
        "z": "81389382.5c507",
        "name": "",
        "url": "/todos/:todoId",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 320,
        "wires": [
            [
                "455b614c.650b3"
            ]
        ]
    },
    {
        "id": "2f47c7c7.96cb18",
        "type": "http response",
        "z": "81389382.5c507",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 870,
        "y": 320,
        "wires": []
    },
    {
        "id": "40d17dd2.7f0944",
        "type": "comment",
        "z": "81389382.5c507",
        "name": "Delete a todo",
        "info": "Deletes an item from the database.\n\nAs CouchDB requires us to provide the `_id` *and* `_rev` of the item, this flow most first get the item from the database so we can then delete it.\n\nThe CouchDB API does provide a more efficient way to get the `_rev` without retrieving the entire document, but this Cloudant node doesn't provide that option.",
        "x": 110,
        "y": 280,
        "wires": []
    },
    {
        "id": "a07a53ce.62217",
        "type": "cloudantplus in",
        "z": "81389382.5c507",
        "name": "Get all",
        "cloudant": "3e527677.c86c1a",
        "database": "todos",
        "service": "_ext_",
        "search": "_all_",
        "design": "",
        "index": "",
        "x": 290,
        "y": 100,
        "wires": [
            [
                "f5f4fcb8.f353"
            ]
        ]
    },
    {
        "id": "cdaeacc.f09e35",
        "type": "change",
        "z": "81389382.5c507",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "req.params.todoId",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 460,
        "wires": [
            [
                "776e36f.71b26c8"
            ]
        ]
    },
    {
        "id": "1c2ab83d.949958",
        "type": "cloudantplus out",
        "z": "81389382.5c507",
        "name": "Add new todo",
        "cloudant": "3e527677.c86c1a",
        "database": "todos",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 500,
        "y": 200,
        "wires": [
            [
                "a8bde436.0dc558"
            ]
        ]
    },
    {
        "id": "a8bde436.0dc558",
        "type": "switch",
        "z": "81389382.5c507",
        "name": "Success?",
        "property": "payload.ok",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 680,
        "y": 200,
        "wires": [
            [
                "33d30c.3430ecf4"
            ],
            []
        ]
    },
    {
        "id": "33d30c.3430ecf4",
        "type": "change",
        "z": "81389382.5c507",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.id",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 180,
        "wires": [
            [
                "9166e792.47b9d8"
            ]
        ]
    },
    {
        "id": "46d195d2.1a60bc",
        "type": "cloudantplus out",
        "z": "81389382.5c507",
        "name": "Delete doc",
        "cloudant": "3e527677.c86c1a",
        "database": "todos",
        "service": "_ext_",
        "payonly": true,
        "operation": "delete",
        "x": 710,
        "y": 320,
        "wires": [
            [
                "2f47c7c7.96cb18"
            ]
        ]
    },
    {
        "id": "455b614c.650b3",
        "type": "change",
        "z": "81389382.5c507",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "req.params.todoId",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 320,
        "wires": [
            [
                "6e585cfa.09f564"
            ]
        ]
    },
    {
        "id": "6417e4dd.f51b8c",
        "type": "cloudantplus out",
        "z": "81389382.5c507",
        "name": "Delete one",
        "cloudant": "3e527677.c86c1a",
        "database": "todos",
        "service": "_ext_",
        "payonly": true,
        "operation": "delete",
        "x": 570,
        "y": 820,
        "wires": [
            [
                "aac31d6e.161fc"
            ]
        ]
    },
    {
        "id": "4e1c3359.2d5b2c",
        "type": "cloudantplus in",
        "z": "81389382.5c507",
        "name": "Get all",
        "cloudant": "3e527677.c86c1a",
        "database": "todos",
        "service": "_ext_",
        "search": "_all_",
        "design": "",
        "index": "",
        "x": 170,
        "y": 880,
        "wires": [
            [
                "7ebf0499.3d5dac"
            ]
        ]
    },
    {
        "id": "e7d95978.fe0988",
        "type": "split",
        "z": "81389382.5c507",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 410,
        "y": 820,
        "wires": [
            [
                "6417e4dd.f51b8c"
            ]
        ]
    },
    {
        "id": "aac31d6e.161fc",
        "type": "join",
        "z": "81389382.5c507",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 730,
        "y": 820,
        "wires": [
            [
                "4478dc0.634da24"
            ]
        ]
    },
    {
        "id": "4478dc0.634da24",
        "type": "change",
        "z": "81389382.5c507",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 880,
        "wires": [
            [
                "11249f0d.585451"
            ]
        ]
    },
    {
        "id": "7ebf0499.3d5dac",
        "type": "switch",
        "z": "81389382.5c507",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 310,
        "y": 880,
        "wires": [
            [
                "e7d95978.fe0988"
            ],
            [
                "4478dc0.634da24"
            ]
        ]
    },
    {
        "id": "e360bc45.81bfe",
        "type": "function",
        "z": "81389382.5c507",
        "name": "Set Defaults",
        "func": "if (!msg.payload.hasOwnProperty(\"completed\")) {\n    msg.payload.completed = false;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 200,
        "wires": [
            [
                "1c2ab83d.949958"
            ]
        ]
    },
    {
        "id": "f7630914.871188",
        "type": "split",
        "z": "81389382.5c507",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 610,
        "y": 60,
        "wires": [
            [
                "f8a9727.3053b9"
            ]
        ]
    },
    {
        "id": "86addf88.bd4bc",
        "type": "join",
        "z": "81389382.5c507",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 910,
        "y": 60,
        "wires": [
            [
                "dcf53a36.75f188"
            ]
        ]
    },
    {
        "id": "f5f4fcb8.f353",
        "type": "switch",
        "z": "81389382.5c507",
        "name": "Check empty?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 440,
        "y": 100,
        "wires": [
            [
                "f7630914.871188"
            ],
            [
                "dcf53a36.75f188"
            ]
        ]
    },
    {
        "id": "a9efd584.e6fb78",
        "type": "link in",
        "z": "81389382.5c507",
        "name": "Get ToDo",
        "links": [
            "9166e792.47b9d8",
            "bb28e46.d3c8918"
        ],
        "x": 495,
        "y": 500,
        "wires": [
            [
                "776e36f.71b26c8"
            ]
        ]
    },
    {
        "id": "9166e792.47b9d8",
        "type": "link out",
        "z": "81389382.5c507",
        "name": "",
        "links": [
            "a9efd584.e6fb78"
        ],
        "x": 995,
        "y": 180,
        "wires": []
    },
    {
        "id": "6e585cfa.09f564",
        "type": "cloudantplus in",
        "z": "81389382.5c507",
        "name": "Get _rev",
        "cloudant": "3e527677.c86c1a",
        "database": "todos",
        "service": "_ext_",
        "search": "_id_",
        "design": "",
        "index": "",
        "x": 560,
        "y": 320,
        "wires": [
            [
                "46d195d2.1a60bc"
            ]
        ]
    },
    {
        "id": "7eee2972.ef8f08",
        "type": "cloudantplus out",
        "z": "81389382.5c507",
        "name": "Apply patch",
        "cloudant": "3e527677.c86c1a",
        "database": "todos",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 750,
        "y": 680,
        "wires": [
            [
                "bb28e46.d3c8918"
            ]
        ]
    },
    {
        "id": "bb28e46.d3c8918",
        "type": "link out",
        "z": "81389382.5c507",
        "name": "",
        "links": [
            "a9efd584.e6fb78",
            "d47278f7.4d9738"
        ],
        "x": 875,
        "y": 680,
        "wires": []
    },
    {
        "id": "239e2e9f.36cf82",
        "type": "cloudantplus in",
        "z": "81389382.5c507",
        "name": "Get _rev",
        "cloudant": "3e527677.c86c1a",
        "database": "todos",
        "service": "_ext_",
        "search": "_id_",
        "design": "",
        "index": "",
        "x": 480,
        "y": 620,
        "wires": [
            [
                "964624.14fe29e"
            ]
        ]
    },
    {
        "id": "964624.14fe29e",
        "type": "switch",
        "z": "81389382.5c507",
        "name": "Exists?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 360,
        "y": 700,
        "wires": [
            [
                "dfc6ed86.814bc"
            ],
            [
                "1fea61eb.78253e"
            ]
        ]
    },
    {
        "id": "788d63c4.d9be3c",
        "type": "change",
        "z": "81389382.5c507",
        "name": "Move patch",
        "rules": [
            {
                "t": "set",
                "p": "patch",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "req.params.todoId",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 620,
        "wires": [
            [
                "239e2e9f.36cf82"
            ]
        ]
    },
    {
        "id": "dfc6ed86.814bc",
        "type": "change",
        "z": "81389382.5c507",
        "name": "Update patch",
        "rules": [
            {
                "t": "set",
                "p": "patch._id",
                "pt": "msg",
                "to": "req.params.todoId",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$merge([$.payload,$.patch])",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 680,
        "wires": [
            [
                "7eee2972.ef8f08"
            ]
        ]
    },
    {
        "id": "776e36f.71b26c8",
        "type": "subflow:19d38fbf.a18f6",
        "z": "81389382.5c507",
        "name": "",
        "x": 620,
        "y": 460,
        "wires": [
            [
                "3f6a1d86.f9b892"
            ]
        ]
    },
    {
        "id": "f8a9727.3053b9",
        "type": "subflow:19d38fbf.a18f6",
        "z": "81389382.5c507",
        "name": "",
        "env": [],
        "x": 760,
        "y": 60,
        "wires": [
            [
                "86addf88.bd4bc"
            ]
        ]
    },
    {
        "id": "1fea61eb.78253e",
        "type": "change",
        "z": "81389382.5c507",
        "name": "Set 404 response",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "404",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 740,
        "wires": [
            [
                "a8cd9886.9e8718"
            ]
        ]
    },
    {
        "id": "a8cd9886.9e8718",
        "type": "http response",
        "z": "81389382.5c507",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 750,
        "y": 740,
        "wires": []
    },
    {
        "id": "3e527677.c86c1a",
        "type": "cloudantplus",
        "z": "",
        "host": "http://localhost:5984",
        "name": ""
    }
]